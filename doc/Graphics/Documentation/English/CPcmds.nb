(***********************************************************************

                    Mathematica-Compatible Notebook

This notebook can be used on any computer system with Mathematica 3.0,
MathReader 3.0, or any compatible application. The data for the notebook 
starts with the line of stars above.

To get the notebook into a Mathematica-compatible application, do one of 
the following:

* Save the data starting with the line of stars above into a file
  with a name ending in .nb, then open the file inside the application;

* Copy the data starting with the line of stars above to the
  clipboard, then use the Paste menu command inside the application.

Data for notebooks contains only printable 7-bit ASCII and can be
sent directly in email or through ftp in text mode.  Newlines can be
CR, LF or CRLF (Unix, Macintosh or MS-DOS style).

NOTE: If you modify the data for this notebook not in a Mathematica-
compatible application, you must delete the line below containing the 
word CacheID, otherwise Mathematica-compatible applications may try to 
use invalid cache data.

For more information on notebooks and Mathematica-compatible 
applications, contact Wolfram Research:
  web: http://www.wolfram.com
  email: info@wolfram.com
  phone: +1-217-398-0700 (U.S.)

Notebook reader applications are available free of charge from 
Wolfram Research.
***********************************************************************)

(*CacheID: 232*)


(*NotebookFileLineBreakTest
NotebookFileLineBreakTest*)
(*NotebookOptionsPosition[     16606,        535]*)
(*NotebookOutlinePosition[     20594,        650]*)
(*  CellTagsIndexPosition[     20039,        631]*)
(*WindowFrame->Normal*)



Notebook[{
Cell[BoxData[
    StyleBox[
      \(ComplexPlot3D[f[x, y], {x, xmin, xmax}, {y, ymin, ymax}, opts]\),
      FontFamily->"Courier",
      FontWeight->"Bold"]], "Input",
  CellTags->"ComplexPlot3D"],

Cell[TextData[{
  "generates a surface plot of a complex-valued function f of two variables. \
The height of the surface is given by the absolute value, the color is \
determined by the complex value of f according to the option ",
  Cell[BoxData[
      RowBox[{" ", 
        ButtonBox["ComplexToColorMap",
          ButtonStyle->"AddOnsLink"]}]]],
  ".\n\nThis command is contained in the package ",
  Cell[BoxData[
      RowBox[{
        StyleBox[\(ComplexPlot.m\),
          "MR"], 
        StyleBox[
          RowBox[{
            StyleBox["  ",
              "MR"], " "}]], 
        ButtonBox["ComplexPlot",
          ButtonStyle->"AddOnsLink"]}]]]
}], "Text",
  CellTags->"ComplexPlot3D"],

Cell[BoxData[
    StyleBox[\(ListComplexPlot3D[array, opts]\),
      FontFamily->"Courier",
      FontWeight->"Bold"]], "Input",
  CellTags->"ListComplexPlot3D"],

Cell[TextData[{
  "generates a SurfaceGraphics from a two-dimensional array of complex \
numbers. The height of the surface is given by the absolute value, the color \
is determined by the complex value of f according to the option ",
  Cell[BoxData[
      RowBox[{" ", 
        ButtonBox["ComplexToColorMap",
          ButtonStyle->"AddOnsLink"]}]]],
  ".\n\nThis command is contained in the package ",
  Cell[BoxData[
      RowBox[{
        StyleBox[\(ComplexPlot.m\),
          "MR"], 
        StyleBox[
          RowBox[{
            StyleBox["  ",
              "MR"], " "}]], 
        ButtonBox["ComplexPlot",
          ButtonStyle->"AddOnsLink"]}]]]
}], "Text",
  CellTags->"ListComplexPlot3D"],

Cell[BoxData[
    StyleBox[
      \(ComplexDensityPlot[f[x, y], {x, xmin, xmax}, {y, ymin, ymax}, opts]\),
      
      FontFamily->"Courier",
      FontWeight->"Bold"]], "Input",
  CellTags->"ComplexDensityPlot"],

Cell[TextData[{
  "generates a ",
  Cell[BoxData[
      RowBox[{" ", 
        ButtonBox["ColorDensityGraphics",
          ButtonStyle->"AddOnsLink"]}]]],
  " of a complex-valued function f of two variables x and y. It is similar to \
DensityPlot. The complex value f[x,y] is mapped one-to-one to a color. The \
color map is given by the option ",
  Cell[BoxData[
      RowBox[{" ", 
        ButtonBox["ComplexToColorMap",
          ButtonStyle->"AddOnsLink"]}]]],
  ". The default ",
  Cell[BoxData[
      RowBox[{" ", 
        ButtonBox["$ComplexToColorMap",
          ButtonStyle->"AddOnsLink"]}]]],
  " determines the hue of the color from Arg[z], and the lightness from \
Abs[z].\n\nThis command is contained in the package ",
  Cell[BoxData[
      RowBox[{
        StyleBox[\(ComplexPlot.m\),
          "MR"], 
        StyleBox[
          RowBox[{
            StyleBox["  ",
              "MR"], " "}]], 
        ButtonBox["ComplexPlot",
          ButtonStyle->"AddOnsLink"]}]]]
}], "Text",
  CellTags->"ComplexDensityPlot"],

Cell[BoxData[
    StyleBox[\(ListComplexDensityPlot[array, opts]\),
      FontFamily->"Courier",
      FontWeight->"Bold"]], "Input",
  CellTags->"ListComplexDensityPlot"],

Cell[TextData[{
  "gives a ",
  Cell[BoxData[
      RowBox[{" ", 
        ButtonBox["ColorDensityGraphics",
          ButtonStyle->"AddOnsLink"]}]]],
  " of a two-dimensional array of complex numbers. It is similar to \
ListDensityPlot. Each complex number is mapped one-to-one to a color. The \
color map is determinded by the option ",
  Cell[BoxData[
      RowBox[{" ", 
        ButtonBox["ComplexToColorMap",
          ButtonStyle->"AddOnsLink"]}]]],
  ". The default ",
  Cell[BoxData[
      RowBox[{" ", 
        ButtonBox["$ComplexToColorMap",
          ButtonStyle->"AddOnsLink"]}]]],
  " determines the hue of the color from Arg[z], and the lightness from \
Abs[z].\n\nThis command is contained in the package ",
  Cell[BoxData[
      RowBox[{
        StyleBox[\(ComplexPlot.m\),
          "MR"], 
        StyleBox[
          RowBox[{
            StyleBox["  ",
              "MR"], " "}]], 
        ButtonBox["ComplexPlot",
          ButtonStyle->"AddOnsLink"]}]]]
}], "Text",
  CellTags->"ListComplexDensityPlot"],

Cell[BoxData[
    StyleBox[
      \(ComplexContourPlot[f[x, y], {x, xmin, xmax}, {y, ymin, ymax}, opts]\),
      
      FontFamily->"Courier",
      FontWeight->"Bold"]], "Input",
  CellTags->"ComplexContourPlot"],

Cell[TextData[{
  "visualizes a complex-valued function f of two variables x and y. \
ComplexContourPlot combines a ",
  Cell[BoxData[
      ButtonBox["ColorDensityGraphics",
        ButtonStyle->"AddOnsLink"]]],
  " with a ContourGraphics of the absolute value of f.\n\nThis command is \
contained in the package ",
  Cell[BoxData[
      RowBox[{
        StyleBox[\(ComplexPlot.m\),
          "MR"], 
        StyleBox[
          RowBox[{
            StyleBox["  ",
              "MR"], " "}]], 
        ButtonBox["ComplexPlot",
          ButtonStyle->"AddOnsLink"]}]]]
}], "Text",
  CellTags->"ComplexContourPlot"],

Cell[BoxData[
    StyleBox[\(ListComplexContourPlot[array, opts]\),
      FontFamily->"Courier",
      FontWeight->"Bold"]], "Input",
  CellTags->"ListComplexContourPlot"],

Cell[TextData[{
  "generates a ",
  Cell[BoxData[
      ButtonBox["ColorDensityGraphics",
        ButtonStyle->"AddOnsLink"]]],
  " of a two-dimensional array of complex numbers and combines it with a \
ContourGraphics of Abs[array].\n\nThis command is contained in the package ",
  Cell[BoxData[
      RowBox[{
        StyleBox[\(ComplexPlot.m\),
          "MR"], 
        StyleBox[
          RowBox[{
            StyleBox["  ",
              "MR"], " "}]], 
        ButtonBox["ComplexPlot",
          ButtonStyle->"AddOnsLink"]}]]]
}], "Text",
  CellTags->"ListComplexContourPlot"],

Cell[BoxData[
    StyleBox[\(ColorArrayPlot[list, \ opts]\),
      FontFamily->"Courier",
      FontWeight->"Bold"]], "Input",
  CellTags->"ColorArrayPlot"],

Cell[TextData[{
  "makes a 2D raster plot with colors given by list. Here list is a \
two-dimensional array of color directives.\n\nThis command is contained in \
the package ",
  Cell[BoxData[
      RowBox[{
        StyleBox[\(ComplexPlot.m\),
          "MR"], 
        StyleBox[
          RowBox[{
            StyleBox["  ",
              "MR"], " "}]], 
        ButtonBox["ComplexPlot",
          ButtonStyle->"AddOnsLink"]}]]]
}], "Text",
  CellTags->"ColorArrayPlot"],

Cell[BoxData[
    StyleBox[\(ComplexToColor[z, opts]\),
      FontFamily->"Courier",
      FontWeight->"Bold"]], "Input",
  CellTags->"ComplexToColor"],

Cell[TextData[{
  "associates a color to a complex number z. The color map is given by the \
option  ",
  Cell[BoxData[
      RowBox[{" ", 
        ButtonBox["ComplexToColorMap",
          ButtonStyle->"AddOnsLink"]}]]],
  ".\n\nThis command is contained in the package ",
  Cell[BoxData[
      RowBox[{
        StyleBox[\(ComplexPlot.m\),
          "MR"], 
        StyleBox[
          RowBox[{
            StyleBox["  ",
              "MR"], " "}]], 
        ButtonBox["ComplexPlot",
          ButtonStyle->"AddOnsLink"]}]]]
}], "Text",
  CellTags->"ComplexToColor"],

Cell[BoxData[
    RowBox[{
      StyleBox["ComplexToColorMap",
        FontFamily->"Courier",
        FontWeight->"Bold"], "->", "$ComplexToColorMap"}]], "Input",
  CellTags->"ComplexToColorMap"],

Cell[TextData[{
  "is an option for ",
  Cell[BoxData[
      ButtonBox["ComplexToColor",
        ButtonStyle->"AddOnsLink"]]],
  ", ",
  Cell[BoxData[
      ButtonBox["ComplexDensityPlot",
        ButtonStyle->"AddOnsLink"]]],
  ", ",
  Cell[BoxData[
      ButtonBox["ComplexContourPlot",
        ButtonStyle->"AddOnsLink"]]],
  ", ",
  Cell[BoxData[
      ButtonBox["ComplexPlot3D",
        ButtonStyle->"AddOnsLink"]]],
  ", etc. The default setting is ComplexToColorMap->$ComplexToColorMap, which \
determines the color representing a complex number via a stereographic \
projection from the complex plane onto the surface of the color manifold in \
the HLS system. (",
  Cell[BoxData[
      ButtonBox["$ComplexToColorMap",
        ButtonStyle->"AddOnsLink"]]],
  ")\n\nThis command is contained in the package ",
  Cell[BoxData[
      RowBox[{
        StyleBox[\(ComplexPlot.m\),
          "MR"], 
        StyleBox[
          RowBox[{
            StyleBox["  ",
              "MR"], " "}]], 
        ButtonBox["ComplexPlot",
          ButtonStyle->"AddOnsLink"]}]]]
}], "Text",
  CellTags->"ComplexToColorMap"],

Cell[BoxData[
    RowBox[{
      StyleBox["ValueRange",
        FontFamily->"Courier",
        FontWeight->"Bold"], "->", \({0, Infinity}\)}]], "Input",
  CellTags->"ValueRange"],

Cell[TextData[{
  "is an option for ",
  Cell[BoxData[
      ButtonBox["ComplexToColor",
        ButtonStyle->"AddOnsLink"]]],
  ", ",
  Cell[BoxData[
      ButtonBox["ComplexDensityPlot",
        ButtonStyle->"AddOnsLink"]]],
  ", ",
  Cell[BoxData[
      ButtonBox["ComplexContourPlot",
        ButtonStyle->"AddOnsLink"]]],
  ", ",
  Cell[BoxData[
      ButtonBox["ComplexPlot3D",
        ButtonStyle->"AddOnsLink"]]],
  ", etc., which is used to determine parameters for the default color map ",
  Cell[BoxData[
      RowBox[{" ", 
        ButtonBox["$ComplexToColorMap",
          ButtonStyle->"AddOnsLink"]}]]],
  ". ValueRange->{rmin,rmax}, where rmin < rmax are positive real numbers, \
causes every z with Abs[z]<rmin (resp. Abs[z]>rmax) to be colored with \
minimal (resp. maximal) lightness. If rmax < rmin, then Abs[z] < rmax has \
maximal\nlightness, Abs[z] > rmin has minimal lightness. The default \
Automatic corresponds to ValueRange->{0,Infinity}. The setting for \
minimal/maximal lightness is determined by the LightnessRange option\n\nThis \
command is contained in the package ",
  Cell[BoxData[
      RowBox[{
        StyleBox[\(ComplexPlot.m\),
          "MR"], 
        StyleBox[
          RowBox[{
            StyleBox["  ",
              "MR"], " "}]], 
        ButtonBox["ComplexPlot",
          ButtonStyle->"AddOnsLink"]}]]]
}], "Text",
  CellTags->"ValueRange"],

Cell[BoxData[
    StyleBox[\(LightnessRange -> {0, 1}\),
      FontFamily->"Courier",
      FontWeight->"Bold"]], "Input",
  CellTags->"LightnessRange"],

Cell[TextData[{
  "LightnessRange is an option for ",
  Cell[BoxData[
      ButtonBox["ComplexToColor",
        ButtonStyle->"AddOnsLink"]]],
  ", ",
  Cell[BoxData[
      ButtonBox["ComplexDensityPlot",
        ButtonStyle->"AddOnsLink"]]],
  ", ",
  Cell[BoxData[
      ButtonBox["ComplexContourPlot",
        ButtonStyle->"AddOnsLink"]]],
  ", ",
  Cell[BoxData[
      ButtonBox["ComplexPlot3D",
        ButtonStyle->"AddOnsLink"]]],
  ", etc. LightnessRange->{lmin,lmax}, where lmin and lmax are real numbers \
in the interval [0,1], sets the minimal lightness to lmin and the maximal \
lightness to lmax. Default is LightnessRange->{0,1}. The setting for this \
option is used to determine parameters for the default color map ",
  Cell[BoxData[
      RowBox[{" ", 
        ButtonBox["$ComplexToColorMap",
          ButtonStyle->"AddOnsLink"]}]]],
  ".\n\nThis command is contained in the package ",
  Cell[BoxData[
      RowBox[{
        StyleBox[\(ComplexPlot.m\),
          "MR"], 
        StyleBox[
          RowBox[{
            StyleBox["  ",
              "MR"], " "}]], 
        ButtonBox["ComplexPlot",
          ButtonStyle->"AddOnsLink"]}]]]
}], "Text",
  CellTags->"LightnessRange"],

Cell[BoxData[
    RowBox[{
      StyleBox["SphereRadius",
        FontFamily->"Courier",
        FontWeight->"Bold"], "->", "1"}]], "Input",
  CellTags->"SphereRadius"],

Cell[TextData[{
  "is an option for ",
  Cell[BoxData[
      ButtonBox["ComplexToColor",
        ButtonStyle->"AddOnsLink"]]],
  ", ",
  Cell[BoxData[
      ButtonBox["ComplexDensityPlot",
        ButtonStyle->"AddOnsLink"]]],
  ", ",
  Cell[BoxData[
      ButtonBox["ComplexContourPlot",
        ButtonStyle->"AddOnsLink"]]],
  ", ",
  Cell[BoxData[
      ButtonBox["ComplexPlot3D",
        ButtonStyle->"AddOnsLink"]]],
  ", etc.  SphereRadius->R sets the radius of the sphere used by ",
  Cell[BoxData[
      RowBox[{" ", 
        ButtonBox["$ComplexToColorMap",
          ButtonStyle->"AddOnsLink"]}]]],
  " to R. $ComplexToColorMap uses a stereographic projection onto the surface \
of the color manifold to determine the color of a complex number. Setting the \
radius to R causes complex numbers with Abs[z]=R to be drawn at lightness 1/2 \
(which corresponds to maximal brightness and saturation in the HSB system).\n\
\nThis command is contained in the package ",
  Cell[BoxData[
      RowBox[{
        StyleBox[\(ComplexPlot.m\),
          "MR"], 
        StyleBox[
          RowBox[{
            StyleBox["  ",
              "MR"], " "}]], 
        ButtonBox["ComplexPlot",
          ButtonStyle->"AddOnsLink"]}]]]
}], "Text",
  CellTags->"SphereRadius"],

Cell[BoxData[
    StyleBox[\(ColorDensityGraphics[absarray, colorarray, {opts}]\),
      FontFamily->"Courier",
      FontWeight->"Bold"]], "Input",
  CellTags->"ColorDensityGraphics"],

Cell[TextData[{
  "is a representation of a two-dimensional plot of an array of complex \
numbers. It can be converted to SurfaceGraphics, ContourGraphics, \
DensityGraphics and Graphics objects.\n\nThis command is contained in the \
package ",
  Cell[BoxData[
      RowBox[{
        StyleBox[\(ComplexPlot.m\),
          "MR"], 
        StyleBox[
          RowBox[{
            StyleBox["  ",
              "MR"], " "}]], 
        ButtonBox["ComplexPlot",
          ButtonStyle->"AddOnsLink"]}]]]
}], "Text",
  CellTags->"ColorDensityGraphics"],

Cell[BoxData[
    StyleBox[\($ComplexToColorMap[r, phi, {parameters}]\),
      FontFamily->"Courier",
      FontWeight->"Bold"]], "Input",
  CellTags->"$ComplexToColorMap"],

Cell[TextData[{
  "This is the default color map for a number of plot commands in the package \
",
  Cell[BoxData[
      ButtonBox["ComplexPlot",
        ButtonStyle->"AddOnsLink"]]],
  ". $ComplexToColorMap associates a color to a complex number. The complex \
number is given in polar form, r=Abs[z], phi=Arg[z]. The Hue of the color is \
given by phi/2/Pi, the lightness is determined from r. The color map can be \
described as a stereographic projection from the complex plane onto the \
surface of the color manifold in the Hue-Lightness-Saturation system. The \
optional parameters are {R,bmin,bmax,lmin,lmax} specifying the radius R of \
the sphere, the values bmin, bmax depend on the values of r which are to be \
drawn with minimal resp. maximal lightness lmin resp. lmax.\n\nThis command \
is contained in the package ",
  Cell[BoxData[
      RowBox[{
        StyleBox[\(ComplexPlot.m\),
          "MR"], 
        StyleBox[
          RowBox[{
            StyleBox["  ",
              "MR"], " "}]], 
        ButtonBox["ComplexPlot",
          ButtonStyle->"AddOnsLink"]}]]]
}], "Text",
  CellTags->"$ComplexToColorMap"]
},
FrontEndVersion->"Macintosh 3.0",
ScreenRectangle->{{0, 1024}, {0, 748}},
WindowSize->{445, 698},
WindowMargins->{{Automatic, 22}, {Automatic, -1}},
ShowCellTags->True,
StyleDefinitions -> "HelpBrowser.nb",
MacintoshSystemPageSetup->"\<\
00<0001804P000000]P2:?oQon82n@960dL5:0?l0080001804P000000]P2:001
0000I00000400`<300000BL?00400@00000000000000060801T1T00000000000
00000000000000000000000000000000\>"
]


(***********************************************************************
Cached data follows.  If you edit this Notebook file directly, not using
Mathematica, you must remove the line containing CacheID at the top of 
the file.  The cache data will then be recreated when you save this file 
from within Mathematica.
***********************************************************************)

(*CellTagsOutline
CellTagsIndex->{
  "ComplexPlot3D"->{
    Cell[1709, 49, 196, 5, 52, "Input",
      CellTags->"ComplexPlot3D"],
    Cell[1908, 56, 694, 20, 106, "Text",
      CellTags->"ComplexPlot3D"]},
  "ListComplexPlot3D"->{
    Cell[2605, 78, 161, 4, 37, "Input",
      CellTags->"ListComplexPlot3D"],
    Cell[2769, 84, 701, 20, 106, "Text",
      CellTags->"ListComplexPlot3D"]},
  "ComplexDensityPlot"->{
    Cell[3473, 106, 213, 6, 52, "Input",
      CellTags->"ComplexDensityPlot"],
    Cell[3689, 114, 1029, 31, 134, "Text",
      CellTags->"ComplexDensityPlot"]},
  "ListComplexDensityPlot"->{
    Cell[4721, 147, 171, 4, 37, "Input",
      CellTags->"ListComplexDensityPlot"],
    Cell[4895, 153, 1024, 31, 134, "Text",
      CellTags->"ListComplexDensityPlot"]},
  "ComplexContourPlot"->{
    Cell[5922, 186, 213, 6, 52, "Input",
      CellTags->"ComplexContourPlot"],
    Cell[6138, 194, 615, 19, 118, "Text",
      CellTags->"ComplexContourPlot"]},
  "ListComplexContourPlot"->{
    Cell[6756, 215, 171, 4, 38, "Input",
      CellTags->"ListComplexContourPlot"],
    Cell[6930, 221, 583, 18, 102, "Text",
      CellTags->"ListComplexContourPlot"]},
  "ColorArrayPlot"->{
    Cell[7516, 241, 156, 4, 38, "Input",
      CellTags->"ColorArrayPlot"],
    Cell[7675, 247, 472, 15, 102, "Text",
      CellTags->"ColorArrayPlot"]},
  "ComplexToColor"->{
    Cell[8150, 264, 151, 4, 38, "Input",
      CellTags->"ComplexToColor"],
    Cell[8304, 270, 567, 19, 102, "Text",
      CellTags->"ComplexToColor"]},
  "ComplexToColorMap"->{
    Cell[8874, 291, 195, 5, 38, "Input",
      CellTags->"ComplexToColorMap"],
    Cell[9072, 298, 1114, 36, 166, "Text",
      CellTags->"ComplexToColorMap"]},
  "ValueRange"->{
    Cell[10189, 336, 178, 5, 38, "Input",
      CellTags->"ValueRange"],
    Cell[10370, 343, 1392, 40, 214, "Text",
      CellTags->"ValueRange"]},
  "LightnessRange"->{
    Cell[11765, 385, 152, 4, 38, "Input",
      CellTags->"LightnessRange"],
    Cell[11920, 391, 1199, 37, 166, "Text",
      CellTags->"LightnessRange"]},
  "SphereRadius"->{
    Cell[13122, 430, 168, 5, 38, "Input",
      CellTags->"SphereRadius"],
    Cell[13293, 437, 1265, 38, 182, "Text",
      CellTags->"SphereRadius"]},
  "ColorDensityGraphics"->{
    Cell[14561, 477, 184, 4, 53, "Input",
      CellTags->"ColorDensityGraphics"],
    Cell[14748, 483, 545, 16, 118, "Text",
      CellTags->"ColorDensityGraphics"]},
  "$ComplexToColorMap"->{
    Cell[15296, 501, 172, 4, 38, "Input",
      CellTags->"$ComplexToColorMap"],
    Cell[15471, 507, 1131, 26, 214, "Text",
      CellTags->"$ComplexToColorMap"]}
  }
*)

(*CellTagsIndex
CellTagsIndex->{
  {"ComplexPlot3D", 17459, 557},
  {"ListComplexPlot3D", 17634, 562},
  {"ComplexDensityPlot", 17818, 567},
  {"ListComplexDensityPlot", 18011, 572},
  {"ComplexContourPlot", 18208, 577},
  {"ListComplexContourPlot", 18400, 582},
  {"ColorArrayPlot", 18592, 587},
  {"ComplexToColor", 18768, 592},
  {"ComplexToColorMap", 18947, 597},
  {"ValueRange", 19126, 602},
  {"LightnessRange", 19297, 607},
  {"SphereRadius", 19474, 612},
  {"ColorDensityGraphics", 19655, 617},
  {"$ComplexToColorMap", 19849, 622}
  }
*)

(*NotebookFileOutline
Notebook[{
Cell[1709, 49, 196, 5, 52, "Input",
  CellTags->"ComplexPlot3D"],
Cell[1908, 56, 694, 20, 106, "Text",
  CellTags->"ComplexPlot3D"],
Cell[2605, 78, 161, 4, 37, "Input",
  CellTags->"ListComplexPlot3D"],
Cell[2769, 84, 701, 20, 106, "Text",
  CellTags->"ListComplexPlot3D"],
Cell[3473, 106, 213, 6, 52, "Input",
  CellTags->"ComplexDensityPlot"],
Cell[3689, 114, 1029, 31, 134, "Text",
  CellTags->"ComplexDensityPlot"],
Cell[4721, 147, 171, 4, 37, "Input",
  CellTags->"ListComplexDensityPlot"],
Cell[4895, 153, 1024, 31, 134, "Text",
  CellTags->"ListComplexDensityPlot"],
Cell[5922, 186, 213, 6, 52, "Input",
  CellTags->"ComplexContourPlot"],
Cell[6138, 194, 615, 19, 118, "Text",
  CellTags->"ComplexContourPlot"],
Cell[6756, 215, 171, 4, 38, "Input",
  CellTags->"ListComplexContourPlot"],
Cell[6930, 221, 583, 18, 102, "Text",
  CellTags->"ListComplexContourPlot"],
Cell[7516, 241, 156, 4, 38, "Input",
  CellTags->"ColorArrayPlot"],
Cell[7675, 247, 472, 15, 102, "Text",
  CellTags->"ColorArrayPlot"],
Cell[8150, 264, 151, 4, 38, "Input",
  CellTags->"ComplexToColor"],
Cell[8304, 270, 567, 19, 102, "Text",
  CellTags->"ComplexToColor"],
Cell[8874, 291, 195, 5, 38, "Input",
  CellTags->"ComplexToColorMap"],
Cell[9072, 298, 1114, 36, 166, "Text",
  CellTags->"ComplexToColorMap"],
Cell[10189, 336, 178, 5, 38, "Input",
  CellTags->"ValueRange"],
Cell[10370, 343, 1392, 40, 214, "Text",
  CellTags->"ValueRange"],
Cell[11765, 385, 152, 4, 38, "Input",
  CellTags->"LightnessRange"],
Cell[11920, 391, 1199, 37, 166, "Text",
  CellTags->"LightnessRange"],
Cell[13122, 430, 168, 5, 38, "Input",
  CellTags->"SphereRadius"],
Cell[13293, 437, 1265, 38, 182, "Text",
  CellTags->"SphereRadius"],
Cell[14561, 477, 184, 4, 53, "Input",
  CellTags->"ColorDensityGraphics"],
Cell[14748, 483, 545, 16, 118, "Text",
  CellTags->"ColorDensityGraphics"],
Cell[15296, 501, 172, 4, 38, "Input",
  CellTags->"$ComplexToColorMap"],
Cell[15471, 507, 1131, 26, 214, "Text",
  CellTags->"$ComplexToColorMap"]
}
]
*)




(***********************************************************************
End of Mathematica Notebook file.
***********************************************************************)

